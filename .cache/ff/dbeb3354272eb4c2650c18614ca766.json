{"id":"node_modules/snabbdom/modules/class.js","dependencies":[{"name":"/Users/isaacho/Documents/application/vue-snabbdom/node_modules/snabbdom/modules/class.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/isaacho/Documents/application/vue-snabbdom/node_modules/snabbdom/src/modules/class.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/isaacho/Documents/application/vue-snabbdom/package.json","includedInParent":true,"mtime":1573542029564},{"name":"/Users/isaacho/Documents/application/vue-snabbdom/node_modules/snabbdom/package.json","includedInParent":true,"mtime":1573542044941}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateClass(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (!klass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? 'add' : 'remove'](name);\n        }\n    }\n}\nexports.classModule = { create: updateClass, update: updateClass };\nexports.default = exports.classModule;\n"},"sourceMaps":{"js":{"version":3,"file":"class.js","sourceRoot":"","sources":["../src/modules/class.ts"],"names":[],"mappings":";;AAKA,qBAAqB,QAAe,EAAE,KAAY;IAChD,IAAI,GAAQ,EAAE,IAAY,EAAE,GAAG,GAAY,KAAK,CAAC,GAAc,EAC3D,QAAQ,GAAI,QAAQ,CAAC,IAAkB,CAAC,KAAK,EAC7C,KAAK,GAAI,KAAK,CAAC,IAAkB,CAAC,KAAK,CAAC;IAE5C,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM,CAAC;IAChC,EAAE,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC;QAAC,MAAM,CAAC;IAC/B,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;IAC1B,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;IAEpB,GAAG,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IACD,GAAG,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;QACnB,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,SAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;AACH,CAAC;AAEY,QAAA,WAAW,GAAG,EAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAW,CAAC;AAChF,kBAAe,mBAAW,CAAC","sourcesContent":["import {VNode, VNodeData} from '../vnode';\nimport {Module} from './module';\n\nexport type Classes = Record<string, boolean>\n\nfunction updateClass(oldVnode: VNode, vnode: VNode): void {\n  var cur: any, name: string, elm: Element = vnode.elm as Element,\n      oldClass = (oldVnode.data as VNodeData).class,\n      klass = (vnode.data as VNodeData).class;\n\n  if (!oldClass && !klass) return;\n  if (oldClass === klass) return;\n  oldClass = oldClass || {};\n  klass = klass || {};\n\n  for (name in oldClass) {\n    if (!klass[name]) {\n      elm.classList.remove(name);\n    }\n  }\n  for (name in klass) {\n    cur = klass[name];\n    if (cur !== oldClass[name]) {\n      (elm.classList as any)[cur ? 'add' : 'remove'](name);\n    }\n  }\n}\n\nexport const classModule = {create: updateClass, update: updateClass} as Module;\nexport default classModule;\n"]}},"error":null,"hash":"ac57686ff8d0eed278bbfcfb7ed631b4","cacheData":{"env":{}}}